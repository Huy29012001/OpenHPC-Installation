Add holiday times to /var/spool/pbs/sched_priv/holidays

*
YEAR  2019
*
* Prime/Nonprime Table 
*
*   Prime Non-Prime
* Day   Start Start
*
  weekday 0800  1730
  saturday  none  all
  sunday  none  all
*
* Day of  Calendar  Company
* Year    Date    Holiday
*

* if a holiday falls on a saturday, it is observed on the friday before
* if a holiday falls on a sunday, it is observed on the monday after

* Jan 1 
    1           Jan 1           New Year's Day
* Jan 2
    2           Jan 2           Substitution Day for New Year's Day
* Feb 19
   50           Feb 19          Makha Bucha Day
* Apr 8
   98           Apr 8           Substitution Day for Chakri Memorial Day
* Apr 15
  105           Apr 15          Songkran Festival Day
* May 20
  140           May 20          Substitution Day for Visakha Bucha Day
* Jul 16
  184           Jul 16          Asalha Bucha Day
* Jul 29
  201           Jul 29          Substitution Day for His Majesty the King's Birthday
* Aug 12
  224           Aug 12          Her Majesty the Queen Mother's Birthday
* Oct 14
  287           Oct 14          Substitution Day for King Bhumibol Adulyadej Memorial Day
* Oct 23
  296           Oct 23          Chulalongkorn Memorial Day
* Dec 5
  339           Dec 5           His Majesty the late King Bhumibol Adulyadej's Birthday
* Dec 25 
  359           Dec 25          Christmas Day
* Dec 26 
  360           Dec 26          Year-End Holiday
* Dec 27 
  361           Dec 27          Year-End Holiday
* Dec 30 
  364           Dec 30          Year-End Holiday
* Dec 31 
  365           Dec 31          Year-End Holiday


Add GPU resource
# qmgr
create resource ngpus type=long, flag=nh
exit

Edit <sched_priv directory>/sched_config to add ngpus to the list of scheduling resources:
# vi /var/spool/pbs/sched_priv/sched_config 
resources: "ncpus, mem, arch, host, vnode, aoe, eoe, ngpus"

# service pbs restart 


Add vnode for cpu and gpu execution

# qmgr
set node master resources_available.ncpus=0, resources_available.mem=0, resources_available.ngpus=0 
set node c1 resources_available.ncpus=0, resources_available.mem=0, resources_available.ngpus=0 
set node c2 resources_available.ncpus=0, resources_available.mem=0, resources_available.ngpus=0 
set node c3 resources_available.ncpus=0, resources_available.mem=0, resources_available.ngpus=0 
create node master-cpu resources_available.ncpus=8, resources_available.mem=64gb, resources_available.ngpus=0, resources_available.host = master, resources_available.vnode = master
create node master-gpu1 resources_available.ncpus=1, resources_available.mem=64gb, resources_available.ngpus=1, resources_available.host = master, resources_available.vnode = master
create node master-gpu2 resources_available.ncpus=1, resources_available.mem=64gb, resources_available.ngpus=1, resources_available.host = master, resources_available.vnode = master
create node c1-cpu resources_available.ncpus=12, resources_available.mem=32gb, resources_available.ngpus=0, resources_available.host = c1, resources_available.vnode = c1
create node c1-gpu1 resources_available.ncpus=1, resources_available.mem=32gb, resources_available.ngpus=1, resources_available.host = c1, resources_available.vnode = c1
create node c2-cpu resources_available.ncpus=12, resources_available.mem=32gb, resources_available.ngpus=0, resources_available.host = c2, resources_available.vnode = c2
create node c2-gpu1 resources_available.ncpus=1, resources_available.mem=32gb, resources_available.ngpus=1, resources_available.host = c2, resources_available.vnode = c2
create node c3-cpu resources_available.ncpus=12, resources_available.mem=64gb, resources_available.ngpus=0, resources_available.host = c3, resources_available.vnode = c3
create node c3-gpu1 resources_available.ncpus=1, resources_available.mem=64gb, resources_available.ngpus=1, resources_available.host = c3, resources_available.vnode = c3
create node c3-gpu2 resources_available.ncpus=1, resources_available.mem=64gb, resources_available.ngpus=1, resources_available.host = c3, resources_available.vnode = c3
exit

# service pbs restart 


Add compute node to PBS pro 
# qmgr
create node master
exit
# service pbs restart

Add cpu queue
# qmgr
create queue qcpu 
set queue qcpu queue_type = Execution 
set queue qcpu resources_max.nodect = 1
set queue qcpu resources_default.nodect = 1
set queue qcpu resources_default.nodes = 1:ppn=6
set queue qcpu resources_default.ncpus = 1
set queue qcpu resources_max.ncpus = 6
set queue qcpu max_running=16
set queue qcpu max_queuable=16
set queue qcpu enabled = True 
set queue qcpu started = True
exit
# service pbs restart


Start PBS Server
# systemctl start pbs

Add the number of GPU devices available to each execution host in the cluster via qmgr:
# qmgr
set node master resources_available.ngpus=0
set node master resources_available.ncpus=4
set node c1 resources_available.ngpus=0
set node c1 resources_available.ncpus=10
set node c2 resources_available.ngpus=0
set node c2 resources_available.ncpus=10

vi vnodes-1

$configversion 2
c3: resources_available.ncpus = 8
c3: resources_available.ngpus = 0
c3[0]: resources_available.ncpus = 2 
c3[0]: resources_available.ngpus = 1 
c3[0]: resources_available.gpu_id = gpu0 
c3[0]: sharing = default_excl
c3[1]: resources_available.ncpus = 2 
c3[1]: resources_available.ngpus = 1 
c3[1]: resources_available.gpu_id = gpu1 
c3[1]: sharing = default_excl

pbs_mom -s insert vnodes-1 vnodes-1
 kill -HUP <PID>

# pbsnodes -a
# nvidia-smi -c 1
# nvidia-smi -pm 1


Add GPU queue
# qmgr
create queue qgpu
set queue qgpu queue_type = Execution 
set queue qgpu resources_max.nodect = 1
set queue qgpu resources_default.nodect = 1
set queue qgpu resources_default.nodes = 1:ppn=1
set queue qgpu resources_max.nodes = 1:ppn=6
set queue qgpu resources_default.ngpus = 1
set queue qgpu resources_default.ncpus = 1
set queue qgpu resources_max.ncpus = 6
set queue qgpu resources_max.ncpus = 2
set queue qgpu max_running=3
set queue qgpu max_queuable=3
set queue qgpu enabled = True 
set queue qgpu started = True
exit
